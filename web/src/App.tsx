import { FC, ReactNode, useCallback, useMemo, useRef, useState } from "react";

const Audio: FC<{}> = ({}) => {
  const audioRef = useRef<HTMLAudioElement | null>(null);

  const onClick = useCallback(() => {
    if (audioRef.current) {
      if (audioRef.current.paused) {
        audioRef.current.play();
      } else {
        audioRef.current.pause();
      }
    }
  }, [audioRef]);

  return (
    <div className="bg-[#272727] ">
      <button type="button" className="" onClick={onClick}>
        Pl
      </button>

      <audio ref={audioRef} />
    </div>
  );
};

const Card = ({
  children,
  heading,
  body,
}: {
  heading: string;
  body: string;
  children?: ReactNode;
}) => (
  <div className="py-4">
    <div className=""></div>

    <div>
      <h4 className="font-bold text-4xl text-center md:text-left mb-6">
        {heading}
      </h4>
      <div className="">{body}</div>
    </div>
  </div>
);

function App() {
  return (
    <section className="h-full pt-8">
      <header className=" text-center">
        <h2 className="font-bold text-4xl my-4">
          Nature voices for Characters
        </h2>

        <p className="">
          Enchace your work flow with tailored voices generated by AI.
        </p>
      </header>

      <div className="">
        <Audio />
      </div>

      <Card
        heading="Text to Speech"
        body="With text to speech, immediately see your AI voice actors update recording."
      />

      <Card
        heading="Voice Styles"
        body="With our wide range of presents voices controlling for emotions and pitch to cast the best actor for your game."
      />

      <Card
        heading="Clone Voices"
        body="Can't find a the perfect voice or need accents not available? Using our AI, clone your voice to create a new actor just for your use."
      />
    </section>
  );
}

export default App;
